{"version":3,"sources":["images/todo.png","component/Todo.js","component/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","console","log","JSON","parse","getLocalItems","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","todo","alt","type","placeholder","value","onChange","e","target","class","title","onClick","newEditItem","find","editItem","index","updatedItems","filter","deleteItem","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,MAA0B,iC,OC4H1BA,EA5GF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAdR,WAClB,IAAIG,EAAOC,aAAaC,QAAQ,SAGhC,OAFAC,QAAQC,IAAIJ,GAETA,EACQK,KAAKC,MAAML,aAAaC,QAAQ,UAEhC,GAOwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KACA,EAAoCd,mBAAS,MAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACZ,GAAIhB,EAEE,GAAGA,IAAcY,EACnBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAKC,KAAOL,EACJ,2BAAII,GAAX,IAAiBE,KAAKpB,IAEnBkB,MAGfL,GAAgB,GAChBZ,EAAa,IACbc,EAAc,UACb,CACD,IAAMM,EAAe,CAACF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMpB,GACjEW,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBpB,EAAa,SAhBbwB,MAAM,sBAkDd,OAJAC,qBAAU,WACNvB,aAAawB,QAAQ,QAASpB,KAAKqB,UAAUlB,MAC9C,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,4EAGJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,sBAC/BC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAOpC,EAAaoC,EAAEC,OAAOH,UAGpCvB,EAAe,mBAAG2B,MAAM,qBAAqBC,MAAM,WAAWC,QAASzB,IACvE,mBAAGuB,MAAM,gCAAgCC,MAAM,YAAYC,QAASzB,OAK3E,qBAAKa,UAAU,YAAf,SAGQnB,EAAMO,KAAK,SAACC,GACR,OACQ,sBAAKW,UAAU,WAAf,UACA,6BAAKX,EAAKE,OACV,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,gCAAgCW,MAAM,YAAYC,QAAS,kBAjD/F,SAACtB,GACb,IAAIuB,EAAchC,EAAMiC,MAAK,SAACzB,GAC3B,OAAOA,EAAKC,KAAOA,KAEtBd,QAAQC,IAAIoC,GACZ7B,GAAgB,GAChBZ,EAAayC,EAAYtB,MACzBL,EAAcI,GA0CmGyB,CAAS1B,EAAKC,OAC5F,mBAAGU,UAAU,sBAAsBW,MAAM,cAAcC,QAAS,kBA3DrF,SAACI,GAChB,IAAMC,EAAepC,EAAMqC,QAAO,SAAC7B,GAC/B,OAAO2B,IAAU3B,EAAKC,MAG1BR,EAASmC,GAsDiGE,CAAW9B,EAAKC,YAJ3DD,EAAKC,SAcxD,qBAAKU,UAAU,YAAf,SACI,yBAAQA,UAAU,eAAe,oBAAkB,aAAaY,QAlDlE,WACd9B,EAAS,KAiDO,cAAqF,gDAArF,iBC1GTsC,EARA,WACX,OACI,mCACI,oBAAIpB,UAAU,SAAd,yDCUGqB,EATH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c9bca502.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.6e89c9bd.png\";","import React, {useState, useEffect} from 'react'\r\nimport todo from '../images/todo.png';\r\n\r\n\r\n// to set from local strorage\r\nconst getLocalItems = () => {\r\n    let list = localStorage.getItem('lists');\r\n    console.log(list);\r\n\r\n    if(list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalItems());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if(!inputData){\r\n            alert('plz fill the data');\r\n        }else if(inputData && !toggleSubmit){\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if(elem.id === isEditItem){\r\n                        return {...elem, name:inputData}\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setIsEditItem(null);\r\n        }else{\r\n            const allInputData = {id: new Date().getTime().toString(), name: inputData}\r\n            setItems([...items, allInputData]);\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n    // delete the item\r\n    const deleteItem = (index) => {\r\n        const updatedItems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        })\r\n\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    // edit the item\r\n    const editItem = (id) => {\r\n         let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n         });\r\n         console.log(newEditItem);\r\n         setToggleSubmit(false);\r\n         setInputData(newEditItem.name);\r\n         setIsEditItem(id);\r\n    }\r\n\r\n    // remove all item\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    // add data to local storage\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items])\r\n\r\n    return (\r\n        <>\r\n            <div className='main-div'>\r\n                <div className='child-div'>\r\n                    <figure>\r\n                        <img src={todo} alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here 🤞</figcaption>\r\n                    </figure>\r\n\r\n                    <div className='addItems'>\r\n                        <input type=\"text\" placeholder='✍ Add Items...'\r\n                        value={inputData} \r\n                        onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                       {\r\n                           toggleSubmit ? <i class=\"fa fa-plus add-btn\" title='Add Item' onClick={addItem}></i> : \r\n                           <i class=\"fa fa-pencil-square-o add-btn\" title='Edit Item' onClick={addItem}></i>\r\n                       }\r\n                        \r\n                    </div>\r\n\r\n                    <div className='showItems'>\r\n\r\n                        {\r\n                            items.map( (elem) => {\r\n                                return(\r\n                                        <div className='eachItem' key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className='todo-btn'>\r\n                                            <i className=\"fa fa-pencil-square-o add-btn\" title='Edit Item' onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"fa fa-trash add-btn\" title='Delete Item' onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                        </div>\r\n                                     )\r\n                            })\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    {/* Clear all button */}\r\n                    <div className='showItems'>\r\n                        <button className='btn effect04' data-sm-link-text='Remove All' onClick={removeAll}> <span> CHECK LIST </span> </button>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n    ","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <h3 className='footer'>Designed and Developed By Tanveer @ 2021</h3>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css';\nimport Todo from './component/Todo';\nimport Footer from './component/Footer';\n\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}